# ref: https://ssl-config.mozilla.org/
# ref: https://cipherlist.eu/ (2020; previously https://cipherli.st/)
# ref: https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html

# NOTE: OCSP must be enabled manually
# NOTE: version compat (deb12 <> deb13)
#   Debian 12 has nginx version 1.22.1
#   Debian 13 has nginx version 1.26.x
#   no substantial difference in the ssl_* configuration here


# generated 2025-07-05, Mozilla Guideline v5.7, nginx 1.22.1 (UNSUPPORTED; end-of-life), OpenSSL 3.4.0, modern config, no HSTS, no OCSP
# https://ssl-config.mozilla.org/#server=nginx&version=1.22.1&config=modern&openssl=3.4.0&hsts=false&ocsp=false&guideline=5.7

# modern configuration
ssl_protocols TLSv1.3;
ssl_ecdh_curve X25519:prime256v1:secp384r1;
## https://github.com/mozilla/server-side-tls/issues/260
## Issue #260
##  Q: "Why 'ssl_prefer_server_ciphers off'?"
##  A: Namely, all the ciphers in Modern and Intermediate are secure.
##     As such, we let the client choose the most performant cipher suite
##     for their hardware configuration.
##     https://wiki.mozilla.org/Security/Server_Side_TLS
##
ssl_prefer_server_ciphers off;

# uncomment to enable if ssl_protocols includes TLSv1.2 or earlier;
# see also ssl_session_ticket_key alternative to stateful session cache
#ssl_session_timeout 1d;
#ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
ssl_session_tickets off;

# NOTE: ssl_dhparam not needed, DHE ciphers disabled if not defined
#ssl_dhparam /etc/nginx/ssl/dhparam.pem;

## # OCSP stapling
## ssl_stapling on;
## ssl_stapling_verify on;
##
## # verify chain of trust of OCSP response using Root CA and Intermediate certs
## ssl_trusted_certificate /path/to/root_CA_cert_plus_intermediates;
##
## # replace with the IP address of your resolver;
## # async 'resolver' is important for proper operation of OCSP stapling
## resolver 127.0.0.1;
##
## # If certificates are marked OCSP Must-Staple, consider managing the
## # OCSP stapling cache with an external script, e.g. certbot-ocsp-fetcher
